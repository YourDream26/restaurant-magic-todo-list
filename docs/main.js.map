{"version":3,"sources":["./src/app/components/form/form.module.ts","./src/app/pages/main/main.component.html","./src/app/pages/main/main.component.ts","./src/app/components/item/item.component.ts","./src/app/components/item/item.component.html","./src/app/components/completed/completed.module.ts","./src/app/state/todo.model.ts","./src/app/components/completed/completed.component.ts","./src/app/components/completed/completed.component.html","./src/app/pages/main/main.module.ts","./src/environments/environment.ts","./src/app/components/incompleted/incompleted.component.ts","./src/app/components/incompleted/incompleted.component.html","./src/app/state/todo.store.ts","./src/app/state/todo.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/incompleted/incompleted.module.ts","./src/app/state/todo.query.ts","./src/app/app.module.ts","./src/app/components/item/item.module.ts","./src/app/components/index.ts","./src/app/app-routing.module.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACM;AAEJ;;AAc1C,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FARZ;YACP,4DAAY;YACZ,kEAAmB;SACpB;mIAKU,UAAU,mBAVnB,6DAAa,aAGb,4DAAY;QACZ,kEAAmB,aAGnB,6DAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICbT,wEAAwF;IACpF,qFAAkF;IAAxC,gWAAuC;IAAC,4DAAkB;IACxG,qEAAe;;;IADM,0DAAwB;IAAxB,oFAAwB;;;IAGzC,6EAAmC;;;;IAGvC,wEAAkF;IAC9E,mFAA8E;IAAxC,iWAAuC;IAAC,4DAAgB;IAClG,qEAAe;;;IADI,0DAAsB;IAAtB,kFAAsB;;;IAGrC,2EAA+B;;ACApC,MAAM,aAAa;IAKxB,YAAoB,OAAqB,EAAU,OAAqB;QAApD,YAAO,GAAP,OAAO,CAAc;QAAU,YAAO,GAAP,OAAO,CAAc;QAHjE,oBAAe,GAA4B,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QAC1E,sBAAiB,GAA4B,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;IAET,CAAC;IAEtE,QAAQ,KAAU,CAAC;IAEnB,gBAAgB,CAAC,IAAU;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;;0EAXU,aAAa;6FAAb,aAAa;QDb1B,yEAA4B;QACxB,6EAA+B;QAC3B,2HAEe;;QACf,qMAEc;QACd,mEAAmB;QACnB,2HAEe;;QACf,qMAEc;QAClB,4DAAU;QACV,8EAA8B;QAC1B,uEAAqB;QACzB,4DAAU;QACd,4DAAM;;;;QAjBiB,0DAAkC;QAAlC,wJAAkC;QAOlC,0DAAgC;QAAhC,sJAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;AETvD;AAAA;AAAA;AAA+E;;AAQxE,MAAM,aAAa;IAWxB;QATgB,SAAI,GAAS;YAC3B,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,KAAK;SACjB,CAAC;QAGK,iBAAY,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAE7C,CAAC;IAEV,QAAQ,KAAU,CAAC;IAEnB,YAAY,CAAC,CAAQ;QAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,MAAM,aAAa,qBAAa,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,aAAa,CAAC,SAAS,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;;0EApBU,aAAa;6FAAb,aAAa;QCR1B,yEAA0B;QACtB,uEAAM;QAAA,uDAAgB;QAAA,4DAAO;QAC7B,uEAAM;QACF,2EAAoF;QAA7D,0IAAS,wBAAoB,IAAE;QAAtD,4DAAoF;QACxF,4DAAO;QACX,4DAAM;;QAJI,0DAAgB;QAAhB,+EAAgB;QAEqC,0DAA0B;QAA1B,uFAA0B;;;;;;;;;;;;;;ACFzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEE;AAEU;;AAcpD,MAAM,eAAe;;8EAAf,eAAe;8FAAf,eAAe;kGARjB;YACP,4DAAY;YACZ,4DAAU;SACX;mIAKU,eAAe,mBAVxB,uEAAkB,aAGlB,4DAAY;QACZ,4DAAU,aAGV,uEAAkB;;;;;;;;;;;;;ACRtB;AAAA;AAAO,SAAS,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,EAAiB;IACrD,OAAO;QACL,EAAE;QACF,KAAK;QACL,SAAS,EAAE,KAAK;KACT,CAAC;AACZ,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAmH;;;;;;ICE/G,8EAGgD;IAA5C,gWAA2C;IAAC,4DAAW;;;IADvD,yEAAa;;ADKd,MAAM,kBAAkB;IAQ7B;QANO,UAAK,GAAG,iBAAiB,CAAC;QAEjB,aAAQ,GAAgB,EAAE,CAAC;QAEpC,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAE3C,CAAC;IAEV,QAAQ,KAAU,CAAC;IACnB,WAAW,KAAU,CAAC;IAEtB,kBAAkB,CAAC,IAAU;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;oFAfU,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEAAqB;QACjB,wEAAkB;QAAA,uDAAW;QAAA,4DAAK;QAClC,wHAG2D;QAC/D,4DAAM;;QALgB,0DAAW;QAAX,0EAAW;QAER,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;ACFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEE;AAKtB;;AAapB,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FAPZ;YACP,4DAAY;YACZ,uDAAU;YACV,4DAAe;YACf,8DAAiB;SAClB;mIAEU,UAAU,mBATnB,6DAAa,aAGb,4DAAY;QACZ,uDAAU;QACV,4DAAe;QACf,8DAAiB;;;;;;;;;;;;;AClBrB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAmH;;;;;;ICE/G,8EAGgD;IAA5C,kWAA2C;IAAC,4DAAW;;;IADvD,yEAAa;;ADKd,MAAM,oBAAoB;IAS/B;QAPO,UAAK,GAAG,mBAAmB,CAAC;QAEnB,aAAQ,GAAgB,EAAE,CAAC;QAGpC,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAE3C,CAAC;IAEV,QAAQ,KAAU,CAAC;IACnB,WAAW,KAAU,CAAC;IAEtB,kBAAkB,CAAC,IAAU;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;wFAhBU,oBAAoB;oGAApB,oBAAoB;QCTjC,yEAAqB;QACjB,wEAAkB;QAAA,uDAAW;QAAA,4DAAK;QAClC,0HAG2D;QAC/D,4DAAM;;QALgB,0DAAW;QAAX,0EAAW;QAER,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;ACFoC;;AAOxE,SAAS,kBAAkB;IACzB,OAAO,EAAgB,CAAC;AAC1B,CAAC;IAQY,UAAU,SAAV,UAAW,SAAQ,2DAAuB;IACrD;QACE,KAAK,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC9B,CAAC;CACF;oEAJY,UAAU;6FAAV,UAAU,WAAV,UAAU,mBALT,MAAM;AAKP,UAAU;IAHtB,mEAAW,CAAC;QACX,IAAI,EAAE,OAAO;KACd,CAAC;GACW,UAAU,CAItB;AAJsB;;;;;;;;;;;;;ACjBvB;AAAA;AAAA;AAAA;AAAA;AAAgD;;;AAMzC,MAAM,YAAY;IAEvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAEtC,UAAU;QACd,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,+DAA+D;IACzF,CAAC;IAEM,GAAG,CAAC,KAAa;QACtB,MAAM,IAAI,GAAG,8DAAU,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEM,MAAM,CAAC,EAAE,EAAE,EAAE,SAAS,EAAQ;QACjC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE;YACvB,SAAS;SACZ,CAAC,CAAC;IACP,CAAC;IAEM,OAAO;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACtC,CAAC;;wEArBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;ACEb,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCNzB,2EAA+B;;;;;;;;;;;;;;ACA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEE;AAEc;;AAcxD,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGARnB;YACP,4DAAY;YACZ,4DAAU;SACX;mIAKU,iBAAiB,mBAV1B,2EAAoB,aAGpB,4DAAY;QACZ,4DAAU,aAGV,2EAAoB;;;;;;;;;;;;;ACfxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACT;;;AAQ9B,MAAM,YAAa,SAAQ,2DAAuB;IAIrD,YAAsB,KAAiB;QACnC,KAAK,CAAC,KAAK,CAAC,CAAC;QADK,UAAK,GAAL,KAAK,CAAY;QAFhC,eAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAM9B,oBAAe,GAAG,GAA4B,EAAE,CACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CACZ,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CACvE,CACJ;QAEE,sBAAiB,GAAG,GAA4B,EAAE,CACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CACZ,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,CACxE,CACJ;QAEE,wBAAmB,GAAG,GAA8B,EAAE,CACzD,IAAI,CAAC,UAAU,CAAC,IAAI,CAChB,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAChD;IAjBL,CAAC;;wEANQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;ACPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACO;AAEF;;AAgB7C,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAHb;QACT,gEAAY;KACb,YAPQ;YACP,uEAAa;YACb,oEAAgB;YAChB,kEAAU;SACX;mIAMU,SAAS,mBAZlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,kEAAU;;;;;;;;;;;;;ACfd;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEE;;AAa1C,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FAPZ;YACP,4DAAY;SACb;mIAKU,UAAU,mBATnB,6DAAa,aAGb,4DAAY,aAGZ,6DAAa;;;;;;;;;;;;;ACbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACe;AACM;AAMnE;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;;;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAa;KACzB;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACZxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;AAW7D,MAAM,aAAa;IAmBxB,YAAoB,OAAqB,EAAU,KAAmB;QAAlD,YAAO,GAAP,OAAO,CAAc;QAAU,UAAK,GAAL,KAAK,CAAc;QAjB/D,cAAS,GAAG,UAAU,CAAC;QACvB,qBAAgB,GAAG,WAAW,CAAC;QAC/B,gBAAW,GAAG,KAAK,CAAC;QAIpB,iBAAY,GAAkB,EAAE,CAAC;QAEjC,SAAI,GAAc,IAAI,wDAAS,CAAC;YACrC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACzB,UAAU,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,2BAA2B,CAAC;iBAChD;aACF,CAAC;SACH,CAAC,CAAC;IAEuE,CAAC;IAEpE,QAAQ;QACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa;QAClB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC3C,KAAK,CAAC,qCAAqC,CAAC,CAAC;aAC9C;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;aACnB;SACF;aAAM;YACL,KAAK,CAAC,0DAA0D,CAAC,CAAC;SACnE;IACH,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;YACnC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;;0EA7CU,aAAa;6FAAb,aAAa;QCZ1B,yEAAqB;QACjB,wEAAkB;QAAA,uDAAe;QAAA,4DAAK;QAEtC,0EAAsD;QAA7B,yIAAY,mBAAe,IAAC;QACjD,sEAAoG;QACpG,4EAA6C;QAAA,uDAAiB;QAAA,4DAAS;QAC3E,4DAAO;QACX,4DAAM;;QANgB,0DAAe;QAAf,8EAAe;QAE3B,0DAAkB;QAAlB,+EAAkB;QACqB,0DAAgC;QAAhC,6FAAgC;QAC5B,0DAAiB;QAAjB,gFAAiB;;;;;;;;;;;;;;;;;;;;ACLvB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormComponent } from './form.component';\n\n@NgModule({\n  declarations: [\n    FormComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    FormComponent\n  ]\n})\nexport class FormModule { }\n","<div class=\"main-container\">\n    <section class=\"lists-section\">\n        <ng-container *ngIf=\"(incompletedTodos$ | async) as incompleted; else emptyIncompleted\">\n            <app-incompleted [todoList]=\"incompleted\" (changeItem)=\"handleChangeItem($event)\"></app-incompleted>\n        </ng-container>\n        <ng-template #emptyIncompleted>\n            <app-incompleted></app-incompleted>\n        </ng-template>\n        <hr class=\"line\" />\n        <ng-container *ngIf=\"(completedTodos$ | async) as completed; else emptyCompleted\">\n            <app-completed [todoList]=\"completed\" (changeItem)=\"handleChangeItem($event)\"></app-completed>\n        </ng-container>\n        <ng-template #emptyCompleted>\n            <app-completed></app-completed>\n        </ng-template>\n    </section>\n    <section class=\"form-section\">\n        <app-form></app-form>\n    </section>\n</div>","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Todo } from 'src/app/state/todo.model';\nimport { TodosService } from 'src/app/state/todo.service';\n\nimport { SessionQuery } from '../../state/todo.query';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainComponent implements OnInit {\n\n  public completedTodos$: Observable<Array<Todo>> = this.session.completedTodos$();\n  public incompletedTodos$: Observable<Array<Todo>> = this.session.incompletedTodos$();\n\n  constructor(private session: SessionQuery, private service: TodosService) { }\n\n  public ngOnInit(): void {}\n\n  public handleChangeItem(item: Todo): void {\n    this.service.change(item);\n  }\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Todo } from 'src/app/state/todo.model';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent implements OnInit {\n\n  @Input() public todo: Todo = {\n    id: 0,\n    title: '',\n    completed: false\n  };\n\n  @Output()\n  public changeStatus: EventEmitter<Todo> = new EventEmitter();\n\n  constructor() { }\n\n  public ngOnInit(): void {}\n\n  public clickHandler(e: Event): void {\n    e.preventDefault();\n    const updatedObject: Todo = {...this.todo};\n    updatedObject.completed = !updatedObject.completed;\n    this.changeStatus.emit(updatedObject);\n  }\n\n}\n","<div class=\"item-wrapper\">\n    <span>{{ todo.title }}</span>\n    <span>\n        <input type=\"checkbox\" (click)=\"clickHandler($event);\" [checked]=\"todo.completed\" />\n    </span>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ItemModule } from '../item/item.module';\n\nimport { CompletedComponent } from './completed.component';\n\n@NgModule({\n  declarations: [\n    CompletedComponent\n  ],\n  imports: [\n    CommonModule,\n    ItemModule\n  ],\n  exports: [\n    CompletedComponent\n  ]\n})\nexport class CompletedModule { }\n","import { ID } from '@datorama/akita';\n\nexport type Todo = {\n  id: ID;\n  title: string;\n  completed: boolean;\n};\n\nexport function createTodo({ id, title }: Partial<Todo>): Todo {\n  return {\n    id,\n    title,\n    completed: false\n  } as Todo;\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Todo } from 'src/app/state/todo.model';\n\n@Component({\n  selector: 'app-completed',\n  templateUrl: './completed.component.html',\n  styleUrls: ['./completed.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompletedComponent implements OnInit, OnChanges {\n\n  public title = 'Completed Tasks';\n\n  @Input() public todoList: Array<Todo> = [];\n  @Output()\n  public changeItem: EventEmitter<Todo> = new EventEmitter();\n\n  constructor() { }\n\n  public ngOnInit(): void {}\n  public ngOnChanges(): void {}\n\n  public handleChangeStatus(todo: Todo): void {\n    this.changeItem.emit(todo);\n  }\n\n}\n","<div class=\"wrapper\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <app-item \n        *ngFor=\"let item of todoList\"\n        [todo]=\"item\"\n        (changeStatus)=\"handleChangeStatus($event)\"></app-item>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MainComponent } from './main.component';\nimport {\n  FormModule,\n  CompletedModule,\n  IncompletedModule\n} from '../../components/';\n\n@NgModule({\n  declarations: [\n    MainComponent\n  ],\n  imports: [\n    CommonModule,\n    FormModule,\n    CompletedModule,\n    IncompletedModule\n  ]\n})\nexport class MainModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Todo } from 'src/app/state/todo.model';\n\n@Component({\n  selector: 'app-incompleted',\n  templateUrl: './incompleted.component.html',\n  styleUrls: ['./incompleted.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IncompletedComponent implements OnInit, OnChanges {\n\n  public title = 'Incompleted Tasks';\n\n  @Input() public todoList: Array<Todo> = [];\n\n  @Output()\n  public changeItem: EventEmitter<Todo> = new EventEmitter();\n\n  constructor() { }\n\n  public ngOnInit(): void {}\n  public ngOnChanges(): void {}\n\n  public handleChangeStatus(todo: Todo): void {\n    this.changeItem.emit(todo);\n  }\n\n}\n","<div class=\"wrapper\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <app-item \n        *ngFor=\"let item of todoList\"\n        [todo]=\"item\"\n        (changeStatus)=\"handleChangeStatus($event)\"></app-item>\n</div>","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Todo } from './todo.model';\n\nexport interface TodosState extends EntityState<Todo> {\n  todos: Array<Todo>;\n}\n\nfunction createInitialState(): TodosState {\n  return {} as TodosState;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n@StoreConfig({\n  name: 'todos'\n})\nexport class TodosStore extends EntityStore<TodosState> {\n  constructor() {\n    super(createInitialState());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { createTodo, Todo } from './todo.model';\nimport { TodosState, TodosStore } from './todo.store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodosService {\n\n  constructor(private todosStore: TodosStore) {}\n\n  private generateId(): number {\n      return Math.random(); // Let it be like that, very low chance to duplicate this value\n  }\n\n  public add(title: string): void {\n    const todo = createTodo({ id: this.generateId(), title });\n    this.todosStore.add(todo);\n  }\n\n  public change({ id, completed }: Todo): void {\n      this.todosStore.update(id, {\n          completed\n      });\n  }\n\n  public getData(): TodosState {\n      return this.todosStore.getValue();\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ItemModule } from '../item/item.module';\n\nimport { IncompletedComponent } from './incompleted.component';\n\n@NgModule({\n  declarations: [\n    IncompletedComponent\n  ],\n  imports: [\n    CommonModule,\n    ItemModule\n  ],\n  exports: [\n    IncompletedComponent\n  ]\n})\nexport class IncompletedModule { }\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Todo } from './todo.model';\nimport { TodosState, TodosStore } from './todo.store';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionQuery extends QueryEntity<TodosState> {\n\n    public todosList$ = this.selectAll();\n\n    constructor(protected store: TodosStore) {\n        super(store);\n    }\n\n    public completedTodos$ = (): Observable<Array<Todo>> =>\n        this.todosList$.pipe(\n                map((todos) => todos.filter((todo: Todo) => todo.completed === true)\n            )\n        )\n\n    public incompletedTodos$ = (): Observable<Array<Todo>> =>\n        this.todosList$.pipe(\n                map((todos) => todos.filter((todo: Todo) => todo.completed === false)\n            )\n        )\n\n    public existingTitlesList$ = (): Observable<Array<string>> =>\n        this.todosList$.pipe(\n            map((todos) => todos.map(todo => todo.title))\n        )\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainModule } from './pages/main/main.module';\n\nimport { TodosService } from './state/todo.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MainModule\n  ],\n  providers: [\n    TodosService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ItemComponent } from './item.component';\n\n@NgModule({\n  declarations: [\n    ItemComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ItemComponent\n  ]\n})\nexport class ItemModule { }\n","import { FormModule } from './form/form.module';\nimport { CompletedModule } from './completed/completed.module';\nimport { IncompletedModule } from './incompleted/incompleted.module';\n\nexport {\n    FormModule,\n    CompletedModule,\n    IncompletedModule\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './pages/main/main.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ChangeDetectionStrategy, Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { SessionQuery } from 'src/app/state/todo.query';\n\nimport { TodosService } from '../../state/todo.service';\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormComponent implements OnInit, OnDestroy {\n\n  public pageTitle = 'Add Form';\n  public placeholderTitle = 'Task Name';\n  public buttonTitle = 'Add';\n\n  private subscription: Subscription | undefined;\n\n  public existingList: Array<string> = [];\n\n  public form: FormGroup = new FormGroup({\n    title: new FormControl('', {\n      validators: [\n        Validators.required,\n        Validators.pattern(/([a-zA-Z0-9])(a-zA-Z0-9)*/)\n      ]\n    })\n  });\n\n  constructor(private service: TodosService, private store: SessionQuery) { }\n\n  public ngOnInit(): void {\n    this.subscription = this.store.existingTitlesList$().subscribe(titles => {\n      this.existingList = titles;\n    });\n  }\n\n  public submitHandler(): void {\n    if (this.form.valid) {\n      const value = this.form.value.title.trim();\n      if (this.existingList.indexOf(value) !== -1) {\n        alert('Task with this name already Exists!');\n      } else {\n        this.service.add(value);\n        this.form.reset();\n      }\n    } else {\n      alert('Task name cannot be empty or contain special characters!');\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.subscription !== undefined) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"wrapper\">\n    <h2 class=\"title\">{{ pageTitle }}</h2>\n\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitHandler()\">\n        <input class=\"default-input\" type=\"text\" [placeholder]=\"placeholderTitle\" formControlName=\"title\" />\n        <button class=\"default-button\" type=\"submit\">{{ buttonTitle }}</button>\n    </form>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}